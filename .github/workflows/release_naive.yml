name: Naive Plugin Build
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release Tag"
        required: true
      release:
        description: "Release: Input 'y' to ignore."
        required: false
jobs:
  native:
    runs-on: ubuntu-latest
    name: Native Build (NaïveProxy)
    strategy:
      fail-fast: false
      matrix:
        arch: [ armeabi-v7a, arm64-v8a, x86, x86_64 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Fetch Status
        run: git submodule status 'plugin/naive/*' > naive_status
      - name: Naive Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            plugin/naive/src/main/jniLibs/${{ matrix.arch }}
          key: naive-${{ matrix.arch }}-${{ hashFiles('bin/plugin/naive/*', 'naive_status') }}
      - name: Native Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          ./run init action naive
          ./run plugin naive init
          ./run plugin naive ${{ matrix.arch }}
  build:
    name: Gradle Build (NaïveProxy)
    runs-on: ubuntu-latest
    needs:
      - native
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Fetch Status
        run: git submodule status 'plugin/naive/*' > naive_status
      - name: Setup Java
        uses: actions/setup-java@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Naive Cache (armeabi-v7a)
        uses: actions/cache@v4
        with:
          path: |
            plugin/naive/src/main/jniLibs/armeabi-v7a
          key: naive-armeabi-v7a-${{ hashFiles('bin/plugin/naive/*', 'naive_status') }}
      - name: Naive Cache (arm64-v8a)
        uses: actions/cache@v4
        with:
          path: |
            plugin/naive/src/main/jniLibs/arm64-v8a
          key: naive-arm64-v8a-${{ hashFiles('bin/plugin/naive/*', 'naive_status') }}
      - name: Naive Cache (x86)
        uses: actions/cache@v4
        with:
          path: |
            plugin/naive/src/main/jniLibs/x86
          key: naive-x86-${{ hashFiles('bin/plugin/naive/*', 'naive_status') }}
      - name: Naive Cache (x86_64)
        uses: actions/cache@v4
        with:
          path: |
            plugin/naive/src/main/jniLibs/x86_64
          key: naive-x86_64-${{ hashFiles('bin/plugin/naive/*', 'naive_status') }}
      - uses: gradle/actions/setup-gradle@v4
      - name: Release Build
        env:
          SKIP_BUILD: on
          BUILD_PLUGIN: naive
        run: |
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
          echo "${{ secrets.LOCAL_PROPERTIES }}" >> local.properties
          ./gradlew :plugin:naive:assembleFossRelease
          APK=$(find plugin/naive/build/outputs/apk -name '*arm64-v8a*.apk')
          APK=$(dirname "$APK")
          echo "APK=$APK" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v4
        with:
          name: APKs
          path: ${{ env.APK }}
  release:
    name: Release
    if: github.event.inputs.release != 'y'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: APKs
          path: artifacts/
      - name: Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          mkdir apks
          find artifacts -name "*.apk" -exec cp {} apks \;
          gh release create "${{ github.event.inputs.tag }}" --title "${{ github.event.inputs.tag }}" --prerelease ./apks/*