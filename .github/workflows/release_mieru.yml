name: Mieru Plugin Build
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release Tag"
        required: true
      release:
        description: "Release: Input 'y' to ignore."
        required: false
jobs:
  native:
    name: Native Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Fetch Status
        run: git submodule status 'plugin/mieru/*' > mieru_status
      - name: Mieru Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            plugin/mieru/src/main/jniLibs
          key: ${{ hashFiles('.github/workflows/*', 'bin/lib/mieru/*', 'mieru_status') }}
      - name: Golang Version
        if: steps.cache.outputs.cache-hit != 'true'
        id: version
        run: |
          source buildScript/init/version.sh
          echo go_version=$GO_VERSION >> $GITHUB_OUTPUT
      - name: Install Golang
        uses: actions/setup-go@v5
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          go-version: ${{ steps.version.outputs.go_version }}
      - name: Setup Android NDK
        if: steps.cache.outputs.cache-hit != 'true'
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          add-to-path: true
          ndk-version: r28c
          local-cache: false
      - name: Native Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: ./run plugin mieru
  build:
    name: Gradle Build
    runs-on: ubuntu-latest
    needs:
      - native
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Fetch Status
        run: git submodule status 'plugin/mieru/*' > mieru_status
      - name: Mieru Cache
        uses: actions/cache@v4
        with:
          path: |
            plugin/mieru/src/main/jniLibs
          key: ${{ hashFiles('.github/workflows/*', 'bin/lib/mieru/*', 'mieru_status') }}
      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
      - uses: gradle/actions/setup-gradle@v4
      - name: Release Build
        env:
          SKIP_BUILD: on
          BUILD_PLUGIN: mieru
        run: |
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
          echo "${{ secrets.LOCAL_PROPERTIES }}" >> local.properties
          ./gradlew :plugin:mieru:assembleFossRelease
          APK=$(find plugin/mieru/build/outputs/apk -name '*arm64-v8a*.apk')
          APK=$(dirname "$APK")
          echo "APK=$APK" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v4
        with:
          name: APKs
          path: ${{ env.APK }}
  release:
    name: Release
    if: github.event.inputs.release != 'y'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: APKs
          path: artifacts/
      - name: Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          mkdir apks
          find artifacts -name "*.apk" -exec cp {} apks \;
          gh release create "${{ github.event.inputs.tag }}" --title "${{ github.event.inputs.tag }}" --prerelease ./apks/*
